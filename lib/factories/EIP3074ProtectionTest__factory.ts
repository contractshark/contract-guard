/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EIP3074ProtectionTest,
  EIP3074ProtectionTestInterface,
} from "../EIP3074ProtectionTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OnlyEOAs",
        name: "target",
        type: "address",
      },
    ],
    name: "tryCallingProtected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610155806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806303fbaf5c14610030575b600080fd5b61004a600480360381019061004591906100c4565b61004c565b005b8073ffffffffffffffffffffffffffffffffffffffff1663826926796040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561009457600080fd5b505af11580156100a8573d6000803e3d6000fd5b5050505050565b6000813590506100be81610131565b92915050565b6000602082840312156100d657600080fd5b60006100e4848285016100af565b91505092915050565b60006100f882610111565b9050919050565b600061010a826100ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61013a816100ff565b811461014557600080fd5b5056fea164736f6c6343000804000a";

export class EIP3074ProtectionTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EIP3074ProtectionTest> {
    return super.deploy(overrides || {}) as Promise<EIP3074ProtectionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EIP3074ProtectionTest {
    return super.attach(address) as EIP3074ProtectionTest;
  }
  connect(signer: Signer): EIP3074ProtectionTest__factory {
    return super.connect(signer) as EIP3074ProtectionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP3074ProtectionTestInterface {
    return new utils.Interface(_abi) as EIP3074ProtectionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EIP3074ProtectionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EIP3074ProtectionTest;
  }
}
